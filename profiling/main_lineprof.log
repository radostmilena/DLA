Total time: 6e-06 s
File: /media/rherboth/Windows8_OS/Users/Radost Milena/Documents/1 UPPSALA/project_applmech/python_course/project/DLA/dla_3d/initialize_system.py
Function: __init__ at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                               @profile
     6                                               def __init__(self, k):
     7                                                   """
     8                                                   Constructor for this class.
     9                                           
    10                                                   Parameters
    11                                                   ----------
    12                                                   k : int
    13                                                       exponent
    14                                                   N : int
    15                                                       base
    16                                                   grid : array-like
    17                                                       3d grid of dimensions N x N x N
    18                                                   """
    19         1          3.0      3.0     50.0          self.k = k
    20         1          3.0      3.0     50.0          self.N = 2**self.k

Total time: 2.4e-05 s
File: /media/rherboth/Windows8_OS/Users/Radost Milena/Documents/1 UPPSALA/project_applmech/python_course/project/DLA/dla_3d/initialize_system.py
Function: initialize_grid at line 21

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                               @profile
    22                                               def initialize_grid(self):
    23                                                   """Initialize the grid using the parameters from the constructor."""
    24         1         23.0     23.0     95.8          self.grid = np.zeros([self.N, self.N, self.N])
    25         1          1.0      1.0      4.2          return self.grid

Total time: 4.5e-05 s
File: /media/rherboth/Windows8_OS/Users/Radost Milena/Documents/1 UPPSALA/project_applmech/python_course/project/DLA/dla_3d/initialize_system.py
Function: find_center at line 26

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    26                                               @profile
    27                                               def find_center(self):
    28                                                   """Find the center of the grid and fill it."""
    29         1         24.0     24.0     53.3          x = np.int(np.rint((len(self.grid[0][0]))/2))
    30         1         11.0     11.0     24.4          center = np.array([x, x, x])
    31         1          9.0      9.0     20.0          self.grid[center[0]][center[1]][center[2]] = 1
    32         1          1.0      1.0      2.2          return self.grid, center

Total time: 8e-06 s
File: /media/rherboth/Windows8_OS/Users/Radost Milena/Documents/1 UPPSALA/project_applmech/python_course/project/DLA/dla_3d/random_walk.py
Function: __init__ at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                               @profile
     6                                               def __init__(self, grid, center, inner_radius, outer_radius):
     7                                                   """
     8                                                   Constructor for random walk.
     9                                           
    10                                                   Parameters
    11                                                   ----------
    12                                                   grid : array-like
    13                                                          Three-dimensional grid with seed in the center, initialized by the initialize_system class.
    14                                                   center : array-like
    15                                                            Position of the seed.
    16                                                   inner_radius : int
    17                                                                  Radius of the inner sphere, where random walkers start their path.
    18                                                   outer_radius : 
    19                                                                  Radius of the outer sphere. If a walker leaves the outer sphere, its walk will be stopped and a new walker will be released.
    20                                                   """
    21         1          4.0      4.0     50.0          self.grid = grid
    22         1          2.0      2.0     25.0          self.center = center
    23         1          1.0      1.0     12.5          self.inner_radius = inner_radius
    24         1          1.0      1.0     12.5          self.outer_radius = outer_radius

Total time: 1.70966 s
File: /media/rherboth/Windows8_OS/Users/Radost Milena/Documents/1 UPPSALA/project_applmech/python_course/project/DLA/dla_3d/random_walk.py
Function: initialize_walk at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                               @profile
    26                                               def initialize_walk(self):
    27                                                   """
    28                                                   Initializes the position of the random walkers.
    29                                           
    30                                                      Returns
    31                                                      -------
    32                                                      x, y, z : int
    33                                                            Initial position of the random walker on the inner sphere.
    34                                                   """
    35     34999     145067.0      4.1      8.5          scale = np.random.rand()
    36     34999      57093.0      1.6      3.3          theta = 180*scale
    37     34999      28685.0      0.8      1.7          phi = 360*scale
    38     34999     669199.0     19.1     39.1          x = np.int(np.rint(self.center[0] + self.inner_radius*np.sin(theta)*np.cos(phi)))
    39     34999     428359.0     12.2     25.1          y = np.int(np.rint(self.center[1] + self.inner_radius*np.sin(theta)*np.sin(phi)))
    40     34999     346392.0      9.9     20.3          z = np.int(np.rint(self.center[2] + self.inner_radius*np.cos(theta)))
    41     34999      34870.0      1.0      2.0          return x, y, z

Total time: 269.304 s
File: /media/rherboth/Windows8_OS/Users/Radost Milena/Documents/1 UPPSALA/project_applmech/python_course/project/DLA/dla_3d/random_walk.py
Function: test_vicinity at line 42

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    42                                               @profile
    43                                               def test_vicinity(self, grid, center, x0, y0, z0):
    44                                                   """
    45                                                   Search surroundings of a point for filled points and check distance from center.
    46                                           
    47                                                      Parameters
    48                                                      ----------
    49                                                      grid : array-like
    50                                                            Initialized grid with filled center
    51                                                      center : array-like
    52                                                            Position of the center
    53                                                      x0, y0, z0 : int
    54                                                            Position of the point in question
    55                                           
    56                                                      Returns
    57                                                      -------
    58                                                      dist :
    59                                                           Distance of the point from the center.
    60                                                      isum : int
    61                                                           Sum of grid values in the vicinity of the point. Neighbour points can only vary in one point, i.e. [x0, y0, z+1] or [x0-1, y0, z0], but not [x0+1, y0+1, z0].
    62                                                   """
    63   3772044   31163819.0      8.3     11.6          dist = np.sqrt((x0-center[0])**2 + (y0-center[1])**2 + (z0-center[2])**2)
    64   3772044    6590606.0      1.7      2.4          if dist > self.inner_radius:
    65    537427     464608.0      0.9      0.2              return 0, dist
    66                                           
    67   3234617    2439590.0      0.8      0.9          isum = 0
    68                                           
    69   3234617    4349694.0      1.3      1.6          array = [[1, 0, 0], [0, 1, 0], [0, 0, 1], [-1, 0, 0], [0, -1, 0], [0, 0, -1]]
    70  22642319   18709693.0      0.8      6.9          for a in array:
    71  19407702  150555791.0      7.8     55.9              new_indices = np.add([x0, y0, z0], a).astype(int)
    72  19407702   52396032.0      2.7     19.5              if grid[new_indices[0]][new_indices[1]][new_indices[2]] == 1:
    73      4776       5007.0      1.0      0.0                  isum += 1
    74                                           
    75   3234617    2629321.0      0.8      1.0          return isum, dist

Total time: 608.212 s
File: /media/rherboth/Windows8_OS/Users/Radost Milena/Documents/1 UPPSALA/project_applmech/python_course/project/DLA/dla_3d/random_walk.py
Function: walk at line 76

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    76                                               @profile
    77                                               def walk(self, grid):
    78                                                   """
    79                                                   Random walk of an initialized walker.
    80                                           
    81                                                      Returns
    82                                                      -------
    83                                                      grid : array-like
    84                                                          Updated grid after random walker has finished.
    85                                                   """
    86     34999    2140703.0     61.2      0.4          x0, y0, z0 = self.initialize_walk()
    87     34999      40523.0      1.2      0.0          starting_point = [x0, y0, z0]
    88     34999    2045657.0     58.4      0.3          isum, dist = self.test_vicinity(grid, self.center, x0, y0, z0)
    89                                           
    90   3769806    5227678.0      1.4      0.9          while dist <= self.outer_radius:
    91                                           
    92                                                       ## generate array where two numbers are zero and one is 1
    93   3737045   10905184.0      2.9      1.8              array = np.zeros(3)
    94   3737045   22034809.0      5.9      3.6              r = np.random.randint(0, 3, 1)
    95   3737045  128394603.0     34.4     21.1              i = np.random.choice([-1, 1], 1)
    96   3737045   19595098.0      5.2      3.2              array[r] = i
    97                                           
    98                                                       ## get position of starting point
    99   3737045    4247414.0      1.1      0.7              indices = starting_point
   100                                           
   101                                                       ## add array to position of starting point
   102   3737045   37219909.0     10.0      6.1              new_indices = np.add(indices, array).astype(int)
   103                                           
   104                                                       ## assign new position 
   105   3737045    7003273.0      1.9      1.2              starting_point = [new_indices[0], new_indices[1], new_indices[2]]
   106                                           
   107                                                       ## get isum and dist and check for filled points in surrounding/at new position
   108   3737045  355503580.0     95.1     58.5              isum, dist = self.test_vicinity(grid, self.center, new_indices[0], new_indices[1], new_indices[2])
   109                                           
   110   3737045    3652595.0      1.0      0.6              if isum >= 1:
   111      2238       8964.0      4.0      0.0                  grid[new_indices[0]][new_indices[1]][new_indices[2]] = 1
   112      2238       2473.0      1.1      0.0                  break
   113   3734807   10159843.0      2.7      1.7              elif grid[new_indices[0]][new_indices[1]][new_indices[2]] == 1:
   114                                                           break
   115                                                       else:
   116                                                           continue
   117                                           
   118     34999      29979.0      0.9      0.0          return grid


